[{"C:\\node-app\\rian-app\\src\\index.js":"1","C:\\node-app\\rian-app\\src\\App.js":"2","C:\\node-app\\rian-app\\src\\reportWebVitals.js":"3","C:\\node-app\\rian-app\\src\\components\\Home.js":"4","C:\\node-app\\rian-app\\src\\components\\PokemonList.js":"5","C:\\node-app\\rian-app\\src\\components\\MyPokemonList.js":"6","C:\\node-app\\rian-app\\src\\components\\Navigation.js":"7","C:\\node-app\\rian-app\\src\\components\\PokemonDetails.js":"8","C:\\node-app\\rian-app\\src\\components\\PokemonCatch.js":"9"},{"size":712,"mtime":1610954243028,"results":"10","hashOfConfig":"11"},{"size":1055,"mtime":1611324815637,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":262,"mtime":1610960017328,"results":"14","hashOfConfig":"11"},{"size":4737,"mtime":1611276529142,"results":"15","hashOfConfig":"11"},{"size":2439,"mtime":1611324549090,"results":"16","hashOfConfig":"11"},{"size":872,"mtime":1611324875093,"results":"17","hashOfConfig":"11"},{"size":15701,"mtime":1611404841189,"results":"18","hashOfConfig":"11"},{"size":440,"mtime":1611132582955,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ompcsk",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\node-app\\rian-app\\src\\index.js",[],"C:\\node-app\\rian-app\\src\\App.js",["42","43","44"],"C:\\node-app\\rian-app\\src\\reportWebVitals.js",[],["45","46"],"C:\\node-app\\rian-app\\src\\components\\Home.js",["47"],"import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render (){\r\n    return(\r\n      <div>\r\n        Muhammad Rian Fathany Projects\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n",["48","49"],"C:\\node-app\\rian-app\\src\\components\\PokemonList.js",["50","51","52","53","54","55","56"],"C:\\node-app\\rian-app\\src\\components\\MyPokemonList.js",[],"C:\\node-app\\rian-app\\src\\components\\Navigation.js",["57"],"C:\\node-app\\rian-app\\src\\components\\PokemonDetails.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React, { Component } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { createStore,set, update, del, entries  } from 'idb-keyval';\r\n\r\nclass PokemonDetails extends Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      var dbname = createStore('my-list-db', 'my-pokemon-list');\r\n\r\n      if('localdata' in localStorage){\r\n          var getLocalData = JSON.parse(localStorage.getItem('localdata'));\r\n      } else {\r\n        var localdata = {\r\n          nickname:this.props.location.state.nickname,\r\n          name:this.props.location.state.name,\r\n          isMyList:this.props.location.state.isMyList,\r\n          myListId:this.props.location.state.myListId,\r\n        };\r\n        localStorage.setItem('localdata', JSON.stringify(localdata));\r\n        var getLocalData = JSON.parse(localStorage.getItem('localdata'));\r\n      }\r\n\r\n      this.state = {\r\n        error:null,\r\n        isLoaded:false,\r\n        items:[],\r\n        getLocalData:getLocalData,\r\n        dbname:dbname,\r\n        random:0,\r\n        customName:null,\r\n        value:null,\r\n        isDetail:null,\r\n        isGatcha:null,\r\n        isEditable:null,\r\n      }\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n      this.detailData();\r\n  }\r\n\r\n  toPokemonList = () =>{\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  createLocalData = (localdata) =>{\r\n    var parseData = JSON.parse(localdata);\r\n    var localdata = {\r\n      nickname: parseData.nickname,\r\n      name:parseData.name,\r\n      isMyList:parseData.isMyList,\r\n      myListId:parseData.myListId\r\n    };\r\n    localStorage.setItem('localdata', JSON.stringify(localdata));\r\n  }\r\n\r\n  createNicknameCache = (nickname) => {\r\n    localStorage.setItem(nickname, \"This data exist\");\r\n  }\r\n\r\n  //view data\r\n  detailData = () => {\r\n\r\n    const gqlQuery = `query pokemons($name: String!) {\r\n          pokemon(name: $name) {\r\n            id\r\n            name\r\n            location_area_encounters\r\n            sprites{\r\n              back_default\r\n              front_default\r\n            }\r\n            abilities {\r\n              ability {\r\n                name\r\n              }\r\n            }\r\n            moves {\r\n              move {\r\n                name\r\n              }\r\n            }\r\n            types {\r\n              type {\r\n                name\r\n              }\r\n            }\r\n            message\r\n            status\r\n          }\r\n        }`;\r\n\r\n    // if(this.props.location.state !== null){\r\n    //   var localdata = {\r\n    //     nickname:this.props.location.state.nickname,\r\n    //     name:this.props.location.state.name,\r\n    //     isEditable:this.props.location.state.isEditable,\r\n    //     isMyList:this.props.location.state.isMyList,\r\n    //     myListId:this.props.location.state.myListId,\r\n    //   }\r\n    // }\r\n    // this.createLocalData(JSON.stringify(localdata));\r\n\r\n    const gqlVariables = { name: this.state.getLocalData.name,};\r\n    var url = \"https://graphql-pokeapi.vercel.app/api/graphql\";\r\n    var header = {\r\n      credentials: 'omit',\r\n      headers:{ 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        query: gqlQuery,\r\n        variables: gqlVariables,\r\n      }),\r\n      method: 'POST',\r\n    };\r\n\r\n    if(this.state.getLocalData.isMyList == 1){\r\n      fetch(url,header)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n                isLoaded:true,\r\n                items:result.data.pokemon,\r\n                value:this.state.getLocalData.nickname\r\n            });\r\n          },\r\n          (error)=>{\r\n              this.setState({\r\n                  isLoaded:true,\r\n                  error\r\n              });\r\n          }\r\n        )\r\n    }else{\r\n      fetch(url,header)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n                isLoaded:true,\r\n                items:result.data.pokemon,\r\n                value:result.data.pokemon.name\r\n            });\r\n          },\r\n          (error)=>{\r\n              this.setState({\r\n                  isLoaded:true,\r\n                  error\r\n              });\r\n          }\r\n        )\r\n    }\r\n\r\n  }\r\n\r\n  catchPokemon = () => {\r\n\r\n    const rand = Math.floor(Math.random()*100);\r\n    this.setState({ random: this.state.random + rand });\r\n\r\n    if(rand % 2 == 0){\r\n      this.setState({isDetail: 1,isGatcha:1});\r\n      var localdata = {\r\n        nickname:this.state.items.name,\r\n        name:this.state.items.name,\r\n        isMyList:null,\r\n        myListId:null,\r\n      }\r\n      this.createLocalData(JSON.stringify(localdata));\r\n      console.log(rand + ' GATCHA');\r\n    }else{\r\n      this.setState({isDetail: 2,isGatcha:null});\r\n      var localdata = {\r\n        nickname:this.state.items.name,\r\n        name:this.state.items.name,\r\n        isMyList:null,\r\n        myListId:null,\r\n      }\r\n      this.createLocalData(JSON.stringify(localdata));\r\n      console.log(this.state.random + ' RUN AWAY');\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event){\r\n\r\n    if(this.state.value in localStorage){\r\n      if(this.state.isEditable == 1){\r\n          alert('This nickname exist')\r\n         console.log('This nickname exist')\r\n      }\r\n\r\n    } else {\r\n\r\n      localStorage.removeItem(this.state.getLocalData.nickname);\r\n\r\n      var localdata = {\r\n        nickname:this.state.value,\r\n        name:this.state.getLocalData.name,\r\n        isMyList:null,\r\n        myListId:this.state.getLocalData.myListId,\r\n      }\r\n      this.createLocalData(JSON.stringify(localdata));\r\n\r\n      alert('Nickname '+ this.state.value +' Updated');\r\n      event.preventDefault();\r\n\r\n      if(this.state.getLocalData.isMyList == 1){\r\n        var req = {\r\n          isMyList:1,\r\n          id:this.state.getLocalData.myListId,\r\n          nickname:this.state.value\r\n        }\r\n        this.storeData(JSON.stringify(req));\r\n        this.createNicknameCache(this.state.value);\r\n      }\r\n\r\n      this.setState({isEditable:null});\r\n    }\r\n  }\r\n\r\n  addToMyList = () => {\r\n\r\n    if(this.state.value in localStorage ){\r\n      alert(this.state.value + \" is exist, use another nickname\")\r\n    }else{\r\n      alert(this.state.value + \" nickname success\")\r\n      var localdata = {\r\n        nickname:this.state.value,\r\n        name:this.state.items.name,\r\n        isMyList:1,\r\n        myListId:null,\r\n      };\r\n      this.createLocalData(JSON.stringify(localdata));\r\n\r\n      var req = {\r\n        isMyList:null,\r\n        id:null,\r\n        nickname:this.state.value\r\n      }\r\n      this.storeData(JSON.stringify(req));\r\n\r\n      this.createNicknameCache(this.state.value);\r\n      this.props.history.push(\"/my_pokemon_list\");\r\n\r\n    }\r\n  }\r\n\r\n  storeData = (req) => {\r\n    const { error, isLoaded, items} = this.state;\r\n    var xdata = JSON.parse(req);\r\n    var date = new Date();\r\n    var setId = date.getDate() + \"\"\r\n                + (date.getMonth()+1) + \"\"\r\n                + date.getFullYear() + \"\"\r\n                + date.getHours() + \"\"\r\n                + date.getMinutes() + \"\"\r\n                + date.getSeconds();\r\n    if(xdata.isMyList == null){\r\n      var vdata = {\r\n        id:setId,\r\n        name:xdata.nickname,\r\n        data:items\r\n      };\r\n      var forId = setId;\r\n    }else{\r\n      var vdata = {\r\n        id:xdata.id,\r\n        name:xdata.nickname,\r\n        data:items\r\n      };\r\n      var forId = xdata.id;\r\n    }\r\n\r\n    set(forId, JSON.stringify(vdata), this.state.dbname)\r\n    .then(() => console.log('It worked!'))\r\n    .catch(err => console.log('It failed!', err));\r\n\r\n\r\n  };\r\n\r\n  deleteData = (status,id,nickname) => {\r\n      //var x = '218362';\r\n      if(status == 0){\r\n        del(id,this.state.dbname)\r\n        localStorage.removeItem(nickname);\r\n        this.props.history.push(\"/my_pokemon_list\");\r\n      }\r\n      if(status==1){\r\n        localStorage.removeItem(nickname);\r\n      }\r\n\r\n  }\r\n\r\n  backData = (status) => {\r\n      if(status == 0){ this.setState({ isDetail:null });}\r\n      if(status == 1){ localStorage.removeItem(\"localdata\");}\r\n  }\r\n\r\n  editable = () => {\r\n    this.setState({isGatcha:1});\r\n    if(this.state.isEditable == null){\r\n      this.setState({isEditable:1});\r\n    }\r\n    if(this.state.isEditable == 1){\r\n      this.setState({isEditable:null});\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const { error, isLoaded, items, isDetail, isGatcha, isEditable, getLocalData} = this.state;\r\n\r\n    var btnCatch;\r\n    var btnLetItGo;\r\n    var btnAddToMyList;\r\n    var btnRelease;\r\n    var input;\r\n    var info;\r\n\r\n    if(isGatcha == null){\r\n        //btnCatch = <button  onClick={ () => this.catchPokemon()}><div className=\"title-catch\">Catch</div></button>;\r\n        btnCatch = <button  onClick={ () => this.catchPokemon()}><div className=\"title-catch\">Catch</div></button>;\r\n        input = <form className=\"forEdit\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Pokemon Name\"\r\n                          value={this.state.value}\r\n                        disabled/>\r\n                  </form>;\r\n    }else{\r\n        btnAddToMyList = <button  onClick={ () => this.addToMyList()}>Add To My List</button>;\r\n        btnLetItGo = <NavLink\r\n                            to={{\r\n                              pathname: \"/\",\r\n                            }}>\r\n                            <div>\r\n                              <button  onClick={ () => this.backData(1)}>Let It Go</button>\r\n                            </div>\r\n                         </NavLink>;\r\n        if(isEditable == null){\r\n          input = <form className=\"forEdit\">\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Pokemon Name\"\r\n                            value={this.state.value}\r\n                          disabled/>\r\n                          <button onClick={ () => this.editable()}>Edit</button>\r\n                        </form>;\r\n        }else{\r\n          input = <form className=\"forEdit\" onChange={this.handleChange}>\r\n                        <input\r\n                          className=\"isEditable\"\r\n                          type=\"text\"\r\n                          placeholder=\"Pokemon Name\"\r\n                          value={this.state.value}\r\n                        />\r\n                        <button onClick={ () => this.editable()}>Update</button>\r\n                      </form>;\r\n        }\r\n    }\r\n\r\n    if(getLocalData.isMyList === 1){\r\n      btnCatch = null;\r\n      btnLetItGo= null;\r\n      btnAddToMyList=null;\r\n      btnRelease = <div><button  onClick={ () => this.deleteData(0,getLocalData.myListId,getLocalData.nickname)}><div className=\"title-release\">Release</div></button></div>;\r\n      if(isEditable == null){\r\n        input = <form className=\"forEdit\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Pokemon Name\"\r\n                          value={this.state.value}\r\n                        disabled/>\r\n                        <button onClick={ () => this.editable()}>Edit</button>\r\n                      </form>;\r\n      }else{\r\n        input = <form className=\"forEdit\" onChange={this.handleChange} >\r\n                      <input\r\n                        className=\"isEditable\"\r\n                        type=\"text\"\r\n                        placeholder=\"Pokemon Name\"\r\n                        value={this.state.value}\r\n                      />\r\n                      <button onClick={this.handleSubmit}>Update</button>\r\n                    </form>;\r\n      }\r\n    }\r\n\r\n\r\n    if(error){ return( <div className=\"panel-loading\"><div className=\"loading\">Error : {error.message}</div></div>) }\r\n\r\n    else if(!isLoaded){ return( <div className=\"panel-loading\" ><div className=\"loading\">Loading....</div></div> )}\r\n\r\n    else if(isDetail == 1){\r\n      return(\r\n        <div className=\"panel-gotcha\">\r\n          <div className=\"img-gotcha\"></div>\r\n          <button className=\"btn-gotcha\"  onClick={ () => this.backData(0)}>Back</button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    else if(isDetail == 2){\r\n      return(\r\n        <div>\r\n          <div className=\"field-runaway\">\r\n              <div className=\"img-runaway\"></div>\r\n              <div className=\"title-runaway\">Pokemon Run Away</div>\r\n              <NavLink\r\n                to={{\r\n                  pathname: \"/\",\r\n                }}>\r\n                <button className=\"btn-runaway\">back</button>\r\n              </NavLink>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    else{\r\n      return(\r\n        <div className=\"panel\">\r\n          <div className=\"col-12\">\r\n            <div className=\"col-12\">\r\n\r\n              <div className=\"btn-catch\">\r\n                <div>{btnCatch}</div>\r\n              </div>\r\n\r\n              <div className=\"btn-release\">\r\n                <div>{btnRelease}</div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"col-4\">\r\n\r\n              <div className=\"image-detail\">\r\n                <div className=\"panel-detail panel-image\">\r\n                  <div>\r\n                    <img src={items.sprites.front_default} alt={\"img-\"+items.name} />\r\n                  </div>\r\n                  <div>\r\n                    {input}\r\n                  </div>\r\n                </div>\r\n                <div className=\"panel-add\">\r\n                  <div className=\"box-add\">{btnLetItGo}</div>\r\n                  <div className=\"box-add\">{btnAddToMyList}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <div className=\"col-6\">\r\n                <div className=\"panel-detail\">\r\n                  <div className=\"title-detail head-green\">Type</div>\r\n                  <div className=\"for-field\">\r\n                  {\r\n                    items.types.length > 0 ? items.types.map((data,i) => {\r\n                      const {type} = data\r\n                      return(\r\n                        <div className=\"field-box\">\r\n                          <div>{type.name}</div>\r\n                        </div>\r\n                      )\r\n                    }):null\r\n                  }\r\n                  </div>\r\n                  <div className=\"title-detail head-blue\">Ability</div>\r\n                  <div className=\"for-field\">\r\n                    {\r\n                      items.abilities.length > 0 ? items.abilities.map((data,i) => {\r\n                        const {ability} = data\r\n                        return(\r\n                          <div className=\"field-box\">\r\n                            <div>{ability.name}</div>\r\n                          </div>\r\n                        )\r\n                      }):null\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"panel-detail\">\r\n                  <div className=\"title-detail head-orange\">Move</div>\r\n                  <div className=\"for-field last-field\">\r\n                    {\r\n                      items.moves.length > 0 ? items.moves.map((data,i) => {\r\n                        const {move} = data\r\n                        return(\r\n                          <div className=\"field-box\">\r\n                            <div>{move.name}</div>\r\n                          </div>\r\n                        )\r\n                      }):null\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default PokemonDetails;\r\n","C:\\node-app\\rian-app\\src\\components\\PokemonCatch.js",["79","80","81","82","83","84","85","86","87","88"],{"ruleId":"89","severity":1,"message":"90","line":10,"column":7,"nodeType":"91","messageId":"92","endLine":10,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":17,"column":3,"nodeType":"95","messageId":"96","endLine":20,"endColumn":4},{"ruleId":"89","severity":1,"message":"97","line":23,"column":13,"nodeType":"91","messageId":"92","endLine":23,"endColumn":16},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":4},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"89","severity":1,"message":"104","line":2,"column":19,"nodeType":"91","messageId":"92","endLine":2,"endColumn":23},{"ruleId":"89","severity":1,"message":"105","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":22},{"ruleId":"89","severity":1,"message":"106","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":62,"column":12,"nodeType":"109","messageId":"110","endLine":62,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":66,"column":15,"nodeType":"91","messageId":"113","endLine":66,"endColumn":16},{"ruleId":"89","severity":1,"message":"114","line":127,"column":37,"nodeType":"91","messageId":"92","endLine":127,"endColumn":40},{"ruleId":"115","severity":1,"message":"116","line":131,"column":62,"nodeType":"117","messageId":"118","endLine":131,"endColumn":64},{"ruleId":"93","severity":1,"message":"94","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":4},{"ruleId":"89","severity":1,"message":"119","line":3,"column":27,"nodeType":"91","messageId":"92","endLine":3,"endColumn":33},{"ruleId":"89","severity":1,"message":"120","line":3,"column":40,"nodeType":"91","messageId":"92","endLine":3,"endColumn":47},{"ruleId":"111","severity":1,"message":"121","line":22,"column":13,"nodeType":"91","messageId":"113","endLine":22,"endColumn":25},{"ruleId":"111","severity":1,"message":"122","line":53,"column":9,"nodeType":"91","messageId":"113","endLine":53,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":121,"column":41,"nodeType":"109","messageId":"110","endLine":121,"endColumn":43},{"ruleId":"107","severity":1,"message":"108","line":166,"column":17,"nodeType":"109","messageId":"110","endLine":166,"endColumn":19},{"ruleId":"111","severity":1,"message":"122","line":178,"column":11,"nodeType":"91","messageId":"113","endLine":178,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":197,"column":32,"nodeType":"109","messageId":"110","endLine":197,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":217,"column":43,"nodeType":"109","messageId":"110","endLine":217,"endColumn":45},{"ruleId":"89","severity":1,"message":"123","line":259,"column":13,"nodeType":"91","messageId":"92","endLine":259,"endColumn":18},{"ruleId":"89","severity":1,"message":"124","line":259,"column":20,"nodeType":"91","messageId":"92","endLine":259,"endColumn":28},{"ruleId":"111","severity":1,"message":"125","line":276,"column":11,"nodeType":"91","messageId":"113","endLine":276,"endColumn":16},{"ruleId":"111","severity":1,"message":"126","line":281,"column":11,"nodeType":"91","messageId":"113","endLine":281,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":293,"column":17,"nodeType":"109","messageId":"110","endLine":293,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":298,"column":16,"nodeType":"109","messageId":"110","endLine":298,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":305,"column":17,"nodeType":"109","messageId":"110","endLine":305,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":306,"column":17,"nodeType":"109","messageId":"110","endLine":306,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":314,"column":30,"nodeType":"109","messageId":"110","endLine":314,"endColumn":32},{"ruleId":"89","severity":1,"message":"127","line":328,"column":9,"nodeType":"91","messageId":"92","endLine":328,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":404,"column":22,"nodeType":"109","messageId":"110","endLine":404,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":413,"column":22,"nodeType":"109","messageId":"110","endLine":413,"endColumn":24},{"ruleId":"89","severity":1,"message":"128","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"129","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":17},{"ruleId":"89","severity":1,"message":"130","line":2,"column":19,"nodeType":"91","messageId":"92","endLine":2,"endColumn":27},{"ruleId":"89","severity":1,"message":"131","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":19},{"ruleId":"89","severity":1,"message":"132","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":21},{"ruleId":"89","severity":1,"message":"133","line":4,"column":23,"nodeType":"91","messageId":"92","endLine":4,"endColumn":26},{"ruleId":"89","severity":1,"message":"134","line":4,"column":28,"nodeType":"91","messageId":"92","endLine":4,"endColumn":31},{"ruleId":"89","severity":1,"message":"119","line":4,"column":33,"nodeType":"91","messageId":"92","endLine":4,"endColumn":39},{"ruleId":"89","severity":1,"message":"135","line":4,"column":41,"nodeType":"91","messageId":"92","endLine":4,"endColumn":44},{"ruleId":"89","severity":1,"message":"120","line":4,"column":46,"nodeType":"91","messageId":"92","endLine":4,"endColumn":53},"no-unused-vars","'routerBaseName' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'nav' is assigned a value but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],"'Link' is defined but never used.","'PokemonDetails' is defined but never used.","'MyPokemonList' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'y' is already defined.","redeclared","'url' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'update' is defined but never used.","'entries' is defined but never used.","'getLocalData' is already defined.","'localdata' is already defined.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'vdata' is already defined.","'forId' is already defined.","'info' is defined but never used.","'React' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'PokemonList' is defined but never used.","'createStore' is defined but never used.","'get' is defined but never used.","'set' is defined but never used.","'del' is defined but never used.","no-global-assign","no-unsafe-negation"]